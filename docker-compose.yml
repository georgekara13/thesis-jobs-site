version: '3.7'
services:
  mongodb:
    image: mongo:4.4
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./data/db:/data/db
    ports:
      - '27017:27017'
    command: mongod
  mongo-seed:
    build:
      context: ./mongo-seed
      args:
        USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    links:
      - mongodb
    depends_on:
      - mongodb
    restart: on-failure
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: uop-findajob-server
    container_name: uop-findajob-node-server
    command: npm run prod
    volumes:
      - ./server/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3001:3001'
    depends_on:
      - mongodb
      - mongo-seed
    restart: always
    environment:
      - NODE_ENV=production
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
  scraper:
    build:
      context: ./scraper
      dockerfile: Dockerfile
    image: uop-findajob-scraper
    container_name: uop-findajob-node-scraper
    command: node scrape-scheduler.js
    network_mode: host
    shm_size: '2gb'
    depends_on:
      - server
    volumes:
      - ./scraper/:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    environment:
      - NODE_ENV=production
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: uop-findajob-client
    container_name: uop-findajob-node-client
    ports:
      - '8085:8085'
      - '443:443'
    restart: always
    depends_on:
      - server
    volumes:
      - ./client/nginx/conf/:/etc/nginx/conf.d/:ro
      - ./data/certbot/www:/var/www/certbot/:ro
    environment:
      - NODE_ENV=production
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./data/certbot/www/:/var/www/certbot/:rw
